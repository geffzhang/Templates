{
  "$schema": "http://json.schemastore.org/template",
  "author": ".NET Boxed",
  "classifications": [".NET Boxed", "Library"],
  "name": "NuGet Package Boxed",
  "description": "A solution and project for creating and publishing a NuGet package.",
  "groupIdentity": "Dotnet.Boxed.NuGetPackage",
  "identity": "Dotnet.Boxed.NuGetPackage.CSharp",
  "shortName": "nuget",
  "defaultName": "NuGetPackage1",
  "tags": {
    "language": "C#",
    "type": "solution"
  },
  "sourceName": "NuGetTemplate",
  "preferNameDirectory": true,
  "guids": [
    "D49F5A02-D549-4EF4-8776-89C35A71EB2D",
    "528E66EB-2232-4534-A20D-9BC8A240BF2F"
  ],
  "primaryOutputs": [{ "path": "NuGetTemplate.sln" }],
  "sources": [
    {
      "modifiers": [
        {
          "condition": "(AnalysisMode != \"AllEnabledByDefault\")",
          "exclude": [
            "Source/NuGetTemplate/AssemblyInfo.cs",
            "Tests/NuGetTemplate.Test/AssemblyInfo.cs"
          ]
        },
        {
          "condition": "(!EditorConfig)",
          "exclude": [".editorconfig"]
        },
        {
          "condition": "(!GitHub)",
          "exclude": [
            ".github/ISSUE_TEMPLATE/**/*",
            ".github/CODE_OF_CONDUCT.md",
            ".github/CONTRIBUTING.md",
            ".github/PULL_REQUEST_TEMPLATE.md",
            ".github/SECURITY.md"
          ]
        },
        {
          "condition": "(License == \"None\")",
          "exclude": [".github/LICENSE.md"]
        },
        {
          "condition": "(!ReadMe)",
          "exclude": ["README.md"]
        },
        {
          "condition": "(!Tests)",
          "exclude": ["Tests/NuGetTemplate.Test/**/*"]
        },
        {
          "condition": "(!AppVeyor)",
          "exclude": ["appveyor.yml"]
        },
        {
          "condition": "(!AzurePipelines)",
          "exclude": ["azure-pipelines.yml"]
        },
        {
          "condition": "(!GitHubActions)",
          "exclude": [
            ".github/workflows/build.yml",
            ".github/workflows/codeql-analysis.yml",
            ".github/workflows/release-drafter.yml",
            ".github/release-drafter.yml"
          ]
        }
      ]
    }
  ],
  "symbols": {
    "Framework": {
      "type": "parameter",
      "datatype": "choice",
      "choices": [
        {
          "choice": "net6.0",
          "description": ".NET 6 (net6.0)"
        },
        {
          "choice": "net5.0",
          "description": ".NET 5 (net5.0)"
        },
        {
          "choice": "netstandard2.1",
          "description": ".NET Standard 2.1 (netstandard2.1)"
        },
        {
          "choice": "netstandard2.0",
          "description": ".NET Standard 2.0 (netstandard2.0)"
        },
        {
          "choice": "netcoreapp3.1",
          "description": ".NET Core 3.1 (netcoreapp3.1) - Long Term Support (LTS)"
        },
        {
          "choice": "netcoreapp3.0",
          "description": ".NET Core 3.0 (netcoreapp3.0)"
        },
        {
          "choice": "netcoreapp2.2",
          "description": ".NET Core 2.2 (netcoreapp2.2)"
        },
        {
          "choice": "netcoreapp2.1",
          "description": ".NET Core 2.1 (netcoreapp2.1) - Long Term Support (LTS)"
        },
        {
          "choice": "net48",
          "description": ".NET Framework 4.8 (net48)"
        },
        {
          "choice": "net472",
          "description": ".NET Framework 4.72 (net472)"
        },
        {
          "choice": "net471",
          "description": ".NET Framework 4.71 (net471)"
        },
        {
          "choice": "net47",
          "description": ".NET Framework 4.7 (net47)"
        },
        {
          "choice": "net462",
          "description": ".NET Framework 4.62 (net462)"
        },
        {
          "choice": "net461",
          "description": ".NET Framework 4.61 (net461)"
        },
        {
          "choice": "net46",
          "description": ".NET Framework 4.6 (net46)"
        }
      ],
      "defaultValue": "net6.0",
      "displayName": "Target Framework",
      "description": "The target framework for the project."
    },
    "DotnetFramework": {
      "type": "computed",
      "value": "(Framework == \"net48\") || (Framework == \"net472\") || (Framework == \"net471\") || (Framework == \"net47\") || (Framework == \"net462\") || (Framework == \"net461\") || (Framework == \"net46\")"
    },
    "Nullable": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "true",
      "description": "Enables C# 8 nullable reference types."
    },
    "Sign": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "true",
      "description": "Signs the NuGet package."
    },
    "Title": {
      "type": "parameter",
      "datatype": "string",
      "defaultValue": "Project Title",
      "replaces": "PROJECT-TITLE",
      "description": "The name of the project which determines the NuGet package name and assembly product name."
    },
    "TitleXmlEncoded": {
      "type": "derived",
      "replaces": "PROJECT-TITLE-XML",
      "valueSource": "Title",
      "valueTransform": "xmlEncode"
    },
    "Description": {
      "type": "parameter",
      "datatype": "string",
      "defaultValue": "Project Description",
      "replaces": "PROJECT-DESCRIPTION",
      "description": "A description of the project which determines the NuGet package description and assembly description."
    },
    "DescriptionXmlEncoded": {
      "type": "derived",
      "replaces": "PROJECT-DESCRIPTION-XML",
      "valueSource": "Description",
      "valueTransform": "xmlEncode"
    },
    "Author": {
      "type": "parameter",
      "datatype": "string",
      "defaultValue": "Project Author",
      "replaces": "PROJECT-AUTHOR",
      "description": "The name of the author of the project which determines the NuGet package author, assembly author, company and copyright information."
    },
    "AuthorXmlEncoded": {
      "type": "derived",
      "replaces": "PROJECT-AUTHOR-XML",
      "valueSource": "Author",
      "valueTransform": "xmlEncode"
    },
    "Tags": {
      "type": "parameter",
      "datatype": "string",
      "defaultValue": "Tag1;Tag2;Tag3",
      "replaces": "PROJECT-TAGS",
      "description": "A semi-colon ';' delimited list of tags for the NuGet package."
    },
    "TagsXmlEncoded": {
      "type": "derived",
      "replaces": "PROJECT-TAGS-XML",
      "valueSource": "Tags",
      "valueTransform": "xmlEncode"
    },
    "Contact": {
      "type": "parameter",
      "datatype": "string",
      "defaultValue": "[user@example.com|@ExampleUser]",
      "replaces": "PROJECT-CONTACT",
      "description": "The contact details to use if someone wants to contact you about a security vulnerability or code of conduct issues."
    },
    "ContactXmlEncoded": {
      "type": "derived",
      "replaces": "PROJECT-CONTACT-XML",
      "valueSource": "Contact",
      "valueTransform": "xmlEncode"
    },
    "Comments": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "true",
      "displayName": "Comments",
      "description": "Require comments on all code."
    },
    "ReadMe": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "true",
      "displayName": "Include README.md File",
      "description": "Add a README.md markdown file describing the project."
    },
    "EditorConfig": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "true",
      "displayName": "Include .editorconfig File",
      "description": "Add a .editorconfig file to set a fixed code style."
    },
    "SourceControl": {
      "type": "parameter",
      "datatype": "choice",
      "choices": [
        {
          "choice": "AzureDevOpsServer",
          "displayName": "Azure DevOps Server",
          "description": "Adds source link."
        },
        {
          "choice": "AzureRepos",
          "displayName": "Azure Repos",
          "description": "Adds source link."
        },
        {
          "choice": "Bitbucket",
          "description": "Adds source link."
        },
        {
          "choice": "GitHub",
          "description": "Adds source link, .github directory containing a code of conduct, contributing guide, pull request template and issue templates."
        },
        {
          "choice": "GitLab",
          "description": "Adds source link."
        },
        {
          "choice": "None",
          "description": "No source control provider is being used."
        }
      ],
      "defaultValue": "GitHub",
      "displayName": "Source Control",
      "description": "Select which source control provider you are using if any, to add provider specific features."
    },
    "AzureDevOpsServer": {
      "type": "computed",
      "value": "(SourceControl == \"AzureDevOpsServer\")"
    },
    "AzureRepos": {
      "type": "computed",
      "value": "(SourceControl == \"AzureRepos\")"
    },
    "Bitbucket": {
      "type": "computed",
      "value": "(SourceControl == \"Bitbucket\")"
    },
    "GitHub": {
      "type": "computed",
      "value": "(SourceControl == \"GitHub\")"
    },
    "GitLab": {
      "type": "computed",
      "value": "(SourceControl == \"GitLab\")"
    },
    "GitHubUsername": {
      "type": "parameter",
      "datatype": "string",
      "defaultValue": "Username",
      "replaces": "GITHUB-USERNAME",
      "displayName": "GitHub Username",
      "description": "Your GitHub username or organisation name that the project lives under."
    },
    "GitHubProject": {
      "type": "parameter",
      "datatype": "string",
      "defaultValue": "Project",
      "replaces": "GITHUB-PROJECT",
      "displayName": "GitHub Project",
      "description": "The name of your GitHub project."
    },
    "License": {
      "type": "parameter",
      "datatype": "choice",
      "choices": [
        {
          "choice": "MIT",
          "description": "The MIT license."
        },
        {
          "choice": "None",
          "description": "No license, the source code cannot be legally shared."
        }
      ],
      "defaultValue": "MIT",
      "description": "The legal license applied to the source code in this project."
    },
    "MIT": {
      "type": "computed",
      "value": "(License == \"MIT\")"
    },
    "AnalysisMode": {
      "type": "parameter",
      "datatype": "choice",
      "choices": [
        {
          "choice": "Default",
          "description": "Enables the default minimum set of code analysis rules."
        },
        {
          "choice": "AllEnabledByDefault",
          "displayName": "All Enabled By Default",
          "description": "Enables all code analysis rules."
        },
        {
          "choice": "AllDisabledByDefault",
          "displayName": "All Disabled By Default",
          "description": "Disables all code analysis rules."
        }
      ],
      "defaultValue": "Default",
      "displayName": "Analysis Mode",
      "description": "The selection of code analysis rules to enable."
    },
    "ImplicitUsings": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "true",
      "displayName": "Implicit Usings",
      "description": "Enables implicit using statements in all projects which adds some default System.* namespaces."
    },
    "IsTrimmable": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "false",
      "displayName": "Is Trimmable",
      "description": "Enables the library for trimming which reduces the size of applications by removing unused code."
    },
    "TreatWarningsAsErrors": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "true",
      "displayName": "Treat Warnings As Errors",
      "description": "Treat warnings as errors."
    },
    "StyleCop": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "true",
      "description": "Adds and enforces StyleCop analysers."
    },
    "Tests": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "true",
      "description": "Adds a unit test project."
    },
    "AppVeyor": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "false",
      "description": "Adds AppVeyor continuous integration build file appveyor.yml."
    },
    "AzurePipelines": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "false",
      "displayName": "Azure Pipelines",
      "description": "Adds Azure Pipelines continuous integration build file azure-pipelines.yml."
    },
    "GitHubActions": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "true",
      "displayName": "GitHub Actions",
      "description": "Adds GitHub Actions continuous integration, automatic release drafting and CodeQL security scanning."
    },

    "AuthoringMode": {
      "type": "generated",
      "generator": "constant",
      "parameters": {
        "value": "false"
      }
    }
  }
}
