{
  "$schema": "http://json.schemastore.org/template",
  "author": ".NET Boxed",
  "classifications": [".NET Boxed", "Cloud", "Service", "Web"],
  "name": "ASP.NET Core GraphQL Boxed",
  "description": "A solution and project for creating and publishing a GraphQL API.",
  "groupIdentity": "Dotnet.Boxed.GraphQL",
  "identity": "Dotnet.Boxed.GraphQL.CSharp",
  "shortName": "graphql",
  "defaultName": "GraphQLApplication1",
  "tags": {
    "language": "C#",
    "type": "solution"
  },
  "sourceName": "GraphQLTemplate",
  "preferNameDirectory": true,
  "guids": [
    "113f2d04-69f0-40c3-8797-ba3f356dd812",
    "36941087-72D0-4649-86F6-69AFDC1EC71B",
    "C76FD924-71ED-4A92-A891-D226C0724933"
  ],
  "primaryOutputs": [{ "path": "GraphQLTemplate.sln" }],
  "sources": [
    {
      "modifiers": [
        {
          "condition": "(!EditorConfig)",
          "exclude": [ ".editorconfig" ]
        },
        {
          "condition": "(!GitHub)",
          "exclude": [
            ".github/ISSUE_TEMPLATE/**/*",
            ".github/CODE_OF_CONDUCT.md",
            ".github/CONTRIBUTING.md",
            ".github/PULL_REQUEST_TEMPLATE.md",
            ".github/SECURITY.md"
          ]
        },
        {
          "condition": "(!ReadMe)",
          "exclude": [ "README.md" ]
        },
        {
          "condition": "(!Mutations)",
          "exclude": [
            "Source/GraphQLTemplate/Resolvers/MutationResolver.cs",
            "Source/GraphQLTemplate/Types/MutationObject.cs"
          ]
        },
        {
          "condition": "(!Subscriptions)",
          "exclude": [
            "Source/GraphQLTemplate/Resolvers/SubscriptionResolver.cs",
            "Source/GraphQLTemplate/Types/SubscriptionObject.cs"
          ]
        },
        {
          "condition": "(!DistributedCacheRedis)",
          "exclude": [
            "Source/GraphQLTemplate/ConfigureOptions/ConfigureRedisCacheOptions.cs"
          ]
        },
        {
          "condition": "(!Redis)",
          "exclude": [
            "Source/GraphQLTemplate/Options/RedisOptions.cs"
          ]
        },
        {
          "condition": "(!Serilog)",
          "exclude": [ "Source/GraphQLTemplate/ConfigureOptions/ConfigureRequestLoggingOptions.cs" ]
        },
        {
          "condition": "(!IIS)",
          "exclude": [ "Source/GraphQLTemplate/web.config" ]
        },
        {
          "condition": "(!NGINX)",
          "exclude": [
            "Source/GraphQLTemplate/mime.types",
            "Source/GraphQLTemplate/nginx.conf"
          ]
        },
        {
          "condition": "(!Authorization)",
          "exclude": [
            "Source/GraphQLTemplate/ConfigureOptions/ConfigureAuthorizationOptions.cs",
            "Source/GraphQLTemplate/Constants/AuthorizationPolicyName.cs"
          ]
        },
        {
          "condition": "(!CORS)",
          "exclude": [
            "Source/GraphQLTemplate/ConfigureOptions/ConfigureCorsOptions.cs",
            "Source/GraphQLTemplate/Constants/CorsPolicyName.cs"
          ]
        },
        {
          "condition": "(!ResponseCompression)",
          "exclude": [
            "Source/GraphQLTemplate/ConfigureOptions/ConfigureResponseCompressionOptions.cs",
            "Source/GraphQLTemplate/Options/CompressionOptions.cs"
          ]
        },
        {
          "condition": "(!HstsPreload)",
          "exclude": [ "Source/GraphQLTemplate/ConfigureOptions/ConfigureHstsOptions.cs" ]
        },
        {
          "condition": "(!RobotsTxt)",
          "exclude": [ "Source/GraphQLTemplate/wwwroot/robots.txt" ]
        },
        {
          "condition": "(!SecurityTxt)",
          "exclude": [ "Source/GraphQLTemplate/wwwroot/.well-known/security.txt" ]
        },
        {
          "condition": "(!HumansTxt)",
          "exclude": [ "Source/GraphQLTemplate/wwwroot/humans.txt" ]
        },
        {
          "condition": "(!HealthCheck)",
          "exclude": [
            "Tests/GraphQLTemplate.IntegrationTest/HealthCheckTest.cs"
          ]
        },
        {
          "condition": "(!IntegrationTest)",
          "exclude": [ "Tests/ApiTemplate.IntegrationTest/**/*" ]
        },
        {
          "condition": "(!Docker)",
          "exclude": [ "Source/GraphQLTemplate/Dockerfile", ".dockerignore" ]
        },
        {
          "condition": "(!GitHubActions)",
          "exclude": [
            ".github/workflows/build.yml",
            ".github/workflows/codeql-analysis.yml",
            ".github/workflows/release-drafter.yml",
            ".github/release-drafter.yml"
          ]
        },
        {
          "condition": "(!OpenTelemetry)",
          "exclude": [
            "Source/GraphQLTemplate/Constants/OpenTelemetryAttributeName.cs",
            "Source/GraphQLTemplate/Constants/OpenTelemetryHttpFlavour.cs",
            "Source/GraphQLTemplate/TracerProviderBuilderExtensions.cs"
          ]
        }
      ]
    }
  ],
  "symbols": {
    "Title": {
      "type": "parameter",
      "datatype": "string",
      "defaultValue": "Project Title",
      "replaces": "PROJECT-TITLE",
      "description": "The name of the project which determines the assembly product name."
    },
    "TitleXmlEncoded": {
      "type": "derived",
      "replaces": "PROJECT-TITLE-XML",
      "valueSource": "Title",
      "valueTransform": "xmlEncode"
    },
    "Description": {
      "type": "parameter",
      "datatype": "string",
      "defaultValue": "Project Description",
      "replaces": "PROJECT-DESCRIPTION",
      "description": "A description of the project which determines the assembly description."
    },
    "DescriptionXmlEncoded": {
      "type": "derived",
      "replaces": "PROJECT-DESCRIPTION-XML",
      "valueSource": "Description",
      "valueTransform": "xmlEncode"
    },
    "Author": {
      "type": "parameter",
      "datatype": "string",
      "defaultValue": "Project Author",
      "replaces": "PROJECT-AUTHOR",
      "description": "The name of the author of the project which determines the assembly author, company and copyright information."
    },
    "AuthorXmlEncoded": {
      "type": "derived",
      "replaces": "PROJECT-AUTHOR-XML",
      "valueSource": "Author",
      "valueTransform": "xmlEncode"
    },
    "Contact": {
      "type": "parameter",
      "datatype": "string",
      "defaultValue": "[user@example.com|@ExampleUser]",
      "replaces": "PROJECT-CONTACT",
      "description": "The contact details to use if someone wants to contact you about a security vulnerability or code of conduct issues."
    },
    "ContactXmlEncoded": {
      "type": "derived",
      "replaces": "PROJECT-CONTACT-XML",
      "valueSource": "Contact",
      "valueTransform": "xmlEncode"
    },
    "EditorConfig": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "true",
      "displayName": "Include .editorconfig File",
      "description": "Add a .editorconfig file to set a fixed code style."
    },
    "SourceControl": {
      "type": "parameter",
      "datatype": "choice",
      "choices": [
        {
          "choice": "GitHub",
          "description": "Adds a .github directory containing a code of conduct, contributing guide, pull request template and issue templates."
        },
        {
          "choice": "None",
          "description": "No source control provider is being used."
        }
      ],
      "defaultValue": "GitHub",
      "displayName": "Source Control",
      "description": "Select which source control provider you are using if any, to add provider specific features."
    },
    "GitHub": {
      "type": "computed",
      "value": "(SourceControl == \"GitHub\")"
    },
    "GitHubUsername": {
      "type": "parameter",
      "datatype": "string",
      "defaultValue": "Username",
      "replaces": "GITHUB-USERNAME",
      "displayName": "GitHub Username",
      "description": "Your GitHub username or organisation name that the project lives under."
    },
    "GitHubUsernameLowercase": {
      "type": "derived",
      "replaces": "GITHUB-USERNAME-LOWERCASE",
      "valueSource": "GitHubUsername",
      "valueTransform": "lowerCaseInvariant"
    },
    "GitHubProject": {
      "type": "parameter",
      "datatype": "string",
      "defaultValue": "Project",
      "replaces": "GITHUB-PROJECT",
      "displayName": "GitHub Project",
      "description": "The name of your GitHub project."
    },
    "ReadMe": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "true",
      "displayName": "Include README.md File",
      "description": "Add a README.md markdown file describing the project."
    },
    "TreatWarningsAsErrors": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "true",
      "displayName": "Treat Warnings As Errors",
      "description": "Treat warnings as errors."
    },

    "Mutations": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "true",
      "description": "Add GraphQL mutations to change objects."
    },
    "Subscriptions": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "false",
      "description": "Add GraphQL subscriptions to be notified when objects change (Requires a running instance of redis)."
    },
    "PersistedQueries": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "false",
      "displayName": "Persisted Queries",
      "description": "Add GraphQL active persisted queries which cache queries in Redis so the client only needs to send a query ID and not a full query (Requires a running instance of redis)."
    },
    "Redis": {
      "type": "computed",
      "value": "(Subscriptions || PersistedQueries || DistributedCacheRedis)"
    },
    "ForwardedHeaders": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "true",
      "displayName": "Forwarded Headers",
      "description": "If you use a load balancer, updates the request host and scheme using the X-Forwarded-Host and X-Forwarded-Proto HTTP headers."
    },
    "HostFiltering": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "true",
      "displayName": "Host Filtering",
      "description": "A white-list of host names allowed by the Kestrel web server e.g. example.com. You don't need this if you are using a properly configured reverse proxy."
    },
    "ReverseProxyWebServer": {
      "type": "parameter",
      "datatype": "choice",
      "choices": [
        {
          "choice": "None",
          "description": "Use Kestrel directly instead of a reverse proxy."
        },
        {
          "choice": "IIS",
          "description": "A flexible, secure and manageable Web server for hosting anything on the Web using Windows Server. Select this option if you are deploying your site to Azure web apps."
        },
        {
          "choice": "NGINX",
          "description": "A free, open-source, cross-platform high-performance HTTP server and reverse proxy."
        },
        {
          "choice": "Both",
          "description": "Support both reverse proxy web servers."
        }
      ],
      "defaultValue": "None",
      "displayName": "Reverse Proxy Web Server",
      "description": "The internet facing reverse proxy web server you want to use in front of the primary web server to host the site."
    },
    "IIS": {
      "type": "computed",
      "value": "(ReverseProxyWebServer == \"IIS\" || ReverseProxyWebServer == \"Both\")"
    },
    "NGINX": {
      "type": "computed",
      "value": "(ReverseProxyWebServer == \"NGINX\" || ReverseProxyWebServer == \"Both\")"
    },
    "CloudProvider": {
      "type": "parameter",
      "datatype": "choice",
      "choices": [
        {
          "choice": "Azure",
          "description": "The Microsoft Azure cloud. Adds logging features that let you see logs in the Azure portal."
        },
        {
          "choice": "None",
          "description": "No cloud provider is being used."
        }
      ],
      "defaultValue": "None",
      "displayName": "Cloud Provider",
      "description": "Select which cloud provider you are using if any, to add cloud specific features."
    },
    "Azure": {
      "type": "computed",
      "value": "(CloudProvider == \"Azure\")"
    },
    "OpenTelemetry": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "false",
      "displayName": "Open Telemetry",
      "description": "Instrument, generate, collect, and export telemetry data (metrics, logs, and traces) using the Open Telemetry standard."
    },
    "Logging": {
      "type": "parameter",
      "datatype": "choice",
      "choices": [
        {
          "choice": "Serilog",
          "description": "Logging using Serilog provides an excellent structured logging experience."
        },
        {
          "choice": "None",
          "description": "Not using any logging."
        }
      ],
      "defaultValue": "None",
      "description": "The logging framework to use."
    },
    "Serilog": {
      "type": "computed",
      "value": "(Logging == \"Serilog\")"
    },
    "ApplicationInsights": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "false",
      "displayName": "Application Insights",
      "description": "Monitor internal information about how your application is running, as well as external user information using the Microsoft Azure cloud."
    },
    "ApplicationInsightsKey": {
      "type": "parameter",
      "datatype": "string",
      "defaultValue": "11111111-2222-3333-4444-555555555555",
      "replaces": "APPLICATION-INSIGHTS-INSTRUMENTATION-KEY",
      "displayName": "Application Insights Key",
      "description": "Your Application Insights instrumentation key e.g. 11111111-2222-3333-4444-555555555555."
    },
    "HttpsEverywhere": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "false",
      "displayName": "HTTPS",
      "description": "Use the HTTPS scheme and TLS security across the entire site, redirects HTTP to HTTPS and adds a Strict Transport Security (HSTS) HTTP header with preloading enabled."
    },
    "HstsPreload": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "false",
      "displayName": "HSTS Preload",
      "description": "Enable Strict Transport Security (HSTS) HTTP header with preloading."
    },
    "Authorization": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "true",
      "description": "Enable the use of authorization policies to secure GraphQL types and fields by requiring certain claims. You need to setup authentication yourself."
    },
    "CORS": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "true",
      "description": "Browser security prevents a web page from making AJAX requests to another domain."
    },
    "ResponseCompression": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "true",
      "displayName": "Response Compression",
      "description": "Enables dynamic GZIP response compression of HTTP responses. Not enabled for HTTPS to avoid the BREACH security vulnerability."
    },
    "DistributedCache": {
      "type": "parameter",
      "datatype": "choice",
      "choices": [
        {
          "choice": "Redis",
          "description": "Adds a Redis implementation for IDistributedCache."
        },
        {
          "choice": "InMemory",
          "description": "Adds an in-memory implementation for IDistributedCache."
        },
        {
          "choice": "None",
          "description": "No distributed cache added."
        }
      ],
      "defaultValue": "None",
      "displayName": "Distributed Cache",
      "description": "Adds distributed caching."
    },
    "DistributedCacheRedis": {
      "type": "computed",
      "value": "(DistributedCache == \"Redis\")"
    },
    "DistributedCacheInMemory": {
      "type": "computed",
      "value": "(DistributedCache == \"InMemory\")"
    },
    "DistributedCacheNone": {
      "type": "computed",
      "value": "(DistributedCache == \"None\")"
    },
    "HealthCheck": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "true",
      "displayName": "Health Check",
      "description": "A health-check endpoint that returns the status of this API and its dependencies, giving an indication of its health."
    },
    "RobotsTxt": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "true",
      "displayName": "Include robots.txt File",
      "description": "Adds a robots.txt file to tell search engines not to index this site."
    },
    "SecurityTxt": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "true",
      "displayName": "Include security.txt File",
      "description": "Adds a security.txt file to allow people to contact you if they find a security vulnerability."
    },
    "HumansTxt": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "true",
      "displayName": "Include humans.txt File",
      "description": "Adds a humans.txt file where you can tell the world who wrote the application. This file is a good place to thank your developers."
    },
    "HttpPort": {
      "type": "parameter",
      "datatype": "integer",
      "defaultValue": "5000",
      "displayName": "HTTP Port",
      "description": "Port number to use for the Kestrel HTTP endpoint in launchSettings.json."
    },
    "HttpPortConstant": {
      "type": "generated",
      "generator": "constant",
      "parameters": {
        "value": "5000"
      }
    },
    "HttpPortReplacer": {
      "type": "generated",
      "generator": "coalesce",
      "parameters": {
        "sourceVariableName": "HttpPort",
        "fallbackVariableName": "HttpPortConstant"
      },
      "replaces": "5000"
    },
    "HttpsPort": {
      "type": "parameter",
      "datatype": "integer",
      "defaultValue": "5001",
      "displayName": "HTTPS Port",
      "description": "Port number to use for the Kestrel HTTPS endpoint in launchSettings.json."
    },
    "HttpsPortConstant": {
      "type": "generated",
      "generator": "constant",
      "parameters": {
        "value": "5001"
      }
    },
    "HttpsPortReplacer": {
      "type": "generated",
      "generator": "coalesce",
      "parameters": {
        "sourceVariableName": "HttpsPort",
        "fallbackVariableName": "HttpsPortConstant"
      },
      "replaces": "5001"
    },
    "IISExpressHttpPort": {
      "type": "parameter",
      "datatype": "integer",
      "defaultValue": "44299",
      "displayName": "IIS Express HTTP Port",
      "description": "Port number to use for the IIS Express HTTP endpoint in launchSettings.json."
    },
    "IISExpressHttpPortConstant": {
      "type": "generated",
      "generator": "constant",
      "parameters": {
        "value": "44299"
      }
    },
    "IISExpressHttpPortReplacer": {
      "type": "generated",
      "generator": "coalesce",
      "parameters": {
        "sourceVariableName": "IISExpressHttpPort",
        "fallbackVariableName": "IISExpressHttpPortConstant"
      },
      "replaces": "44299"
    },
    "IISExpressHttpsPort": {
      "type": "parameter",
      "datatype": "integer",
      "defaultValue": "44300",
      "displayName": "IIS Express HTTPS Port",
      "description": "Port number to use for the IIS Express HTTPS endpoint in launchSettings.json (Must be between 44300 and 44399)."
    },
    "IISExpressHttpsPortConstant": {
      "type": "generated",
      "generator": "constant",
      "parameters": {
        "value": "44300"
      }
    },
    "IISExpressHttpsPortReplacer": {
      "type": "generated",
      "generator": "coalesce",
      "parameters": {
        "sourceVariableName": "IISExpressHttpsPort",
        "fallbackVariableName": "IISExpressHttpsPortConstant"
      },
      "replaces": "44300"
    },
    "IntegrationTest": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "true",
      "displayName": "Integration Test",
      "description": "Adds an integration test project."
    },
    "StyleCop": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "false",
      "description": "Adds and enforces StyleCop analysers. NOTE: You may need to sort using statements if you enable this due to limitations in the dotnet new templating engine."
    },
    "Docker": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "true",
      "description": "Adds an optimised Dockerfile to add the ability build a Docker image."
    },
    "DockerRegistry": {
      "type": "parameter",
      "datatype": "choice",
      "choices": [
        {
          "choice": "GitHubContainerRegistry",
          "displayName": "GitHub Container Registry",
          "description": "Push Docker images to the GitHub Container Registry."
        },
        {
          "choice": "DockerHub",
          "displayName": "Docker Hub",
          "description": "Push Docker images to Docker Hub."
        }
      ],
      "defaultValue": "GitHubContainerRegistry",
      "displayName": "Docker Registry",
      "description": "The Docker container registry to push Docker images to."
    },
    "GitHubContainerRegistry": {
      "type": "computed",
      "value": "(DockerRegistry == \"GitHubContainerRegistry\")"
    },
    "DockerHub": {
      "type": "computed",
      "value": "(DockerRegistry == \"DockerHub\")"
    },
    "GitHubActions": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "true",
      "displayName": "GitHub Actions",
      "description": "Adds GitHub Actions continuous integration, automatic release drafting and CodeQL security scanning."
    },

    "AuthoringMode": {
      "type": "generated",
      "generator": "constant",
      "parameters": {
        "value": "false"
      }
    },
    "SkipOpenToDo": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "false",
      "displayName": "Skip Opening ToDo.html",
      "description": "Skips opening the to-do list for the project in a web browser."
    }
  },
  "postActions": [
    {
      "actionId": "3A7C4B45-1F5D-4A30-959A-51B88E82B5D2",
      "condition": "(!SkipOpenToDo) && (OS == \"Windows_NT\")",
      "continueOnError": true,
      "description ": "Open the to-do list for the project in a web browser.",
      "args": {
        "executable": "powershell.exe",
        "args": "start TODO.html",
        "redirectStandardOutput": "false",
        "redirectStandardError": "false"
      },
      "manualInstructions": [
        {
          "text": "Open the TODO.html in a web browser to see a to-do list."
        }
      ]
    },
    {
      "actionId": "3A7C4B45-1F5D-4A30-959A-51B88E82B5D2",
      "condition": "(!SkipOpenToDo) && (OS != \"Windows_NT\")",
      "continueOnError": true,
      "description ": "Open the to-do list for the project in a web browser.",
      "args": {
        "executable": "bash",
        "args": "open TODO.html",
        "redirectStandardOutput": "false",
        "redirectStandardError": "false"
      },
      "manualInstructions": [
        {
          "text": "Open the TODO.html in a web browser to see a to-do list."
        }
      ]
    }
  ]
}
